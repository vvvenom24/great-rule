<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="venom.greatrule.mapper.LoonRuleMapper">
  <resultMap id="BaseResultMap" type="venom.greatrule.entity.LoonRule">
    <!--@mbg.generated-->
    <!--@Table loon_rule-->
    <id column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="rule" jdbcType="VARCHAR" property="rule" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    rule_id, app_name, `rule`, sort
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from loon_rule
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from loon_rule
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="rule_id" keyProperty="ruleId" parameterType="venom.greatrule.entity.LoonRule" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into loon_rule (app_name, `rule`, sort
      )
    values (#{appName,jdbcType=VARCHAR}, #{rule,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="rule_id" keyProperty="ruleId" parameterType="venom.greatrule.entity.LoonRule" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into loon_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appName != null">
        app_name,
      </if>
      <if test="rule != null">
        `rule`,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="rule != null">
        #{rule,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="venom.greatrule.entity.LoonRule">
    <!--@mbg.generated-->
    update loon_rule
    <set>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="rule != null">
        `rule` = #{rule,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="venom.greatrule.entity.LoonRule">
    <!--@mbg.generated-->
    update loon_rule
    set app_name = #{appName,jdbcType=VARCHAR},
      `rule` = #{rule,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="rule_id" keyProperty="ruleId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into loon_rule
    (app_name, `rule`, sort)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.appName,jdbcType=VARCHAR}, #{item.rule,jdbcType=VARCHAR}, #{item.sort,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKeyIn">
    <!--@mbg.generated-->
    delete from loon_rule where rule_id in 
    <foreach close=")" collection="list" item="ruleId" open="(" separator=", ">
      #{ruleId,jdbcType=BIGINT}
    </foreach>
  </delete>

  <select id="selectByAppName" resultMap="BaseResultMap">
    select * from loon_rule where app_name = #{appName}
  </select>

  <select id="selectByAppNameAndRule" resultMap="BaseResultMap">
    select * from loon_rule where app_name = #{appName} and rule = #{rule}
  </select>

  <select id="selectRuleLikeAppName" resultMap="BaseResultMap">
    select * from loon_rule where app_name like concat('%', #{appName}, '%')
  </select>

  <select id="selectRuleContent" resultMap="BaseResultMap">
    select * from loon_rule where match(rule) against (#{content} IN NATURAL LANGUAGE MODE)
  </select>
</mapper>